/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract,
} from "./types";

interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export interface FtsoEpochMock extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): FtsoEpochMock;
  clone(): FtsoEpochMock;
  methods: {
    addVote(
      _epochId: number | string | BN,
      _voter: string,
      _votePowerNat: number | string | BN,
      _votePowerAsset: number | string | BN,
      _price: number | string | BN
    ): NonPayableTransactionObject<void>;

    computeWeights(
      _epochId: number | string | BN,
      _weightsNat: (number | string | BN)[],
      _weightsAsset: (number | string | BN)[]
    ): NonPayableTransactionObject<string[]>;

    configureEpochs(
      _maxVotePowerNatThresholdFraction: number | string | BN,
      _maxVotePowerAssetThresholdFraction: number | string | BN,
      _lowAssetUSDThreshold: number | string | BN,
      _highAssetUSDThreshold: number | string | BN,
      _highAssetTurnoutThresholdBIPS: number | string | BN,
      _lowNatTurnoutThresholdBIPS: number | string | BN,
      _trustedAddresses: string[]
    ): NonPayableTransactionObject<void>;

    getAssetBaseWeightRatio(
      _assetVotePowerUSD: number | string | BN
    ): NonPayableTransactionObject<string>;

    getEpochInstance(
      _epochId: number | string | BN
    ): NonPayableTransactionObject<
      [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string[],
        string,
        string,
        string,
        string[],
        string[],
        boolean,
        boolean
      ]
    >;

    getVoterVoteId(
      _epochId: number | string | BN
    ): NonPayableTransactionObject<string>;

    getWeightRatio(
      _epochId: number | string | BN,
      _weightNatSum: number | string | BN,
      _weightAssetSum: number | string | BN
    ): NonPayableTransactionObject<string>;

    initializeInstanceForReveal(
      _epochId: number | string | BN,
      _circulatingSupplyNat: number | string | BN,
      _votePowerNat: number | string | BN,
      _assets: string[],
      _assetVotePowers: (number | string | BN)[],
      _assetPrices: (number | string | BN)[]
    ): NonPayableTransactionObject<void>;

    setAssetNorm(
      _asset: string,
      _decimals: number | string | BN
    ): NonPayableTransactionObject<void>;

    setAssets(
      _epochId: number | string | BN,
      _assets: string[],
      _assetVotePowers: (number | string | BN)[],
      _assetPrices: (number | string | BN)[]
    ): NonPayableTransactionObject<void>;
  };
  events: {
    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };
}
