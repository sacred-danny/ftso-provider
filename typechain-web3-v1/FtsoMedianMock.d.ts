/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract,
} from "./types";

interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export interface FtsoMedianMock extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): FtsoMedianMock;
  clone(): FtsoMedianMock;
  methods: {
    closestPriceFix(
      _start: number | string | BN,
      _end: number | string | BN,
      _index: (number | string | BN)[],
      _price: (number | string | BN)[]
    ): NonPayableTransactionObject<string>;

    computeSimple(
      _prices: (number | string | BN)[]
    ): NonPayableTransactionObject<{
      _finalMedianPrice: string;
      0: string;
      1: string[];
    }>;

    computeWeighted(
      _price: (number | string | BN)[],
      _weight: (number | string | BN)[]
    ): NonPayableTransactionObject<{
      _index: string[];
      _d: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ];
      0: string[];
      1: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ];
      2: string[];
      3: string[];
    }>;

    partition(
      _left0: number | string | BN,
      _right0: number | string | BN,
      _pivotId: number | string | BN,
      _leftSum0: number | string | BN,
      _rightSum0: number | string | BN,
      _index: (number | string | BN)[],
      _price: (number | string | BN)[],
      _weight: (number | string | BN)[]
    ): NonPayableTransactionObject<{
      _pos: string;
      _leftSum: string;
      _rightSum: string;
      0: string;
      1: string;
      2: string;
      3: string[];
      4: string[];
      5: string[];
    }>;

    samePriceFix(
      _start: number | string | BN,
      _end: number | string | BN,
      _direction: number | string | BN,
      _sumInit: number | string | BN,
      _index: (number | string | BN)[],
      _price: (number | string | BN)[],
      _weight: (number | string | BN)[]
    ): NonPayableTransactionObject<{
      _pos: string;
      _sum: string;
      0: string;
      1: string;
      2: string[];
      3: string[];
      4: string[];
    }>;

    swap(
      _i: number | string | BN,
      _j: number | string | BN,
      _index: (number | string | BN)[]
    ): NonPayableTransactionObject<string[]>;
  };
  events: {
    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };
}
