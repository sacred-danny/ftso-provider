/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract,
} from "./types";

interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export type RewardServiceDailyAuthorizedInflationComputed = ContractEventLog<{
  inflationReceiver: string;
  amountWei: string;
  0: string;
  1: string;
}>;
export type RewardServiceTopupRequestReceived = ContractEventLog<{
  inflationReceiver: string;
  amountWei: string;
  0: string;
  1: string;
}>;

export interface RewardServices extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): RewardServices;
  clone(): RewardServices;
  methods: {};
  events: {
    RewardServiceDailyAuthorizedInflationComputed(
      cb?: Callback<RewardServiceDailyAuthorizedInflationComputed>
    ): EventEmitter;
    RewardServiceDailyAuthorizedInflationComputed(
      options?: EventOptions,
      cb?: Callback<RewardServiceDailyAuthorizedInflationComputed>
    ): EventEmitter;

    RewardServiceTopupRequestReceived(
      cb?: Callback<RewardServiceTopupRequestReceived>
    ): EventEmitter;
    RewardServiceTopupRequestReceived(
      options?: EventOptions,
      cb?: Callback<RewardServiceTopupRequestReceived>
    ): EventEmitter;

    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };

  once(
    event: "RewardServiceDailyAuthorizedInflationComputed",
    cb: Callback<RewardServiceDailyAuthorizedInflationComputed>
  ): void;
  once(
    event: "RewardServiceDailyAuthorizedInflationComputed",
    options: EventOptions,
    cb: Callback<RewardServiceDailyAuthorizedInflationComputed>
  ): void;

  once(
    event: "RewardServiceTopupRequestReceived",
    cb: Callback<RewardServiceTopupRequestReceived>
  ): void;
  once(
    event: "RewardServiceTopupRequestReceived",
    options: EventOptions,
    cb: Callback<RewardServiceTopupRequestReceived>
  ): void;
}
